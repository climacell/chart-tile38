apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "tile38.fullname" . }}-leader
  labels:
    app: {{ template "tile38.name" . }}
    chart: {{ template "tile38.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: leader
spec:
  replicas: {{ .Values.leader.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "tile38.name" . }}
      release: {{ .Release.Name }}
      role: leader
  template:
    metadata:
      annotations:
        {{- if .Values.leader.prometheus.datadog.enabled }}
        ad.datadoghq.com/{{ .Chart.Name }}-leader.check_names: '["openmetrics"]'
        ad.datadoghq.com/{{ .Chart.Name }}-leader.init_configs: '[{}]'
        ad.datadoghq.com/{{ .Chart.Name }}-leader.instances: '[{"namespace": "tile38", "openmetrics_endpoint": "http://%%host%%:%%port_metrics%%/metrics", "metrics": ["tile38.*"]}]'
        ad.datadoghq.com/tolerate-unready: "true"
        {{- end }}
      labels:
        app: {{ template "tile38.name" . }}
        release: {{ .Release.Name }}
        role: leader
    spec:
      initContainers:
        - name: ping-leader
          image: busybox
          command: ["wget", "{{ template "tile38.fullname" .}}-leader:{{.Values.service.port}}/healthz"]
        - name: load-config
          image: busybox
          command: ["cp", "/config/config", "/data/config"]
          volumeMounts:
            - name: data
              mountPath: "{{ .Values.follower.persistentVolume.mountPath }}"
              subPath: "{{ .Values.follower.persistentVolume.subPath }}"
            - name: config
              mountPath: /config
      containers:
        - name: {{ .Chart.Name }}-leader
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["tile38-server"]
          args:
            - "-d"
            - "/data"
            - "-l"
            - "json"
            {{- if .Values.leader.prometheus.enabled }}
            - "--metrics-addr={{ .Values.leader.prometheus.listenAddr }}:{{ .Values.leader.prometheus.port }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- if .Values.leader.prometheus.enabled }}
            - name: metrics
              containerPort: {{ .Values.leader.prometheus.port }}
              protocol: TCP           
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: "{{ .Values.leader.persistentVolume.mountPath }}"
              subPath: "{{ .Values.leader.persistentVolume.subPath }}"
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
{{ toYaml .Values.leader.resources | indent 12 }}
    {{- with .Values.leader.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.leader.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.leader.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "tile38.fullname" . }}-leader
        - name: data
        {{- if .Values.leader.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.leader.persistentVolume.existingClaim }}{{ .Values.leader.persistentVolume.existingClaim }}{{- else }}{{ template "tile38.fullname" . }}-leader{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}